package com.thit.tibdm.util;

import com.alibaba.fastjson.JSON;
import com.thit.tibdm.NettyTransmission.util.SinglePro;
import com.thit.tibdm.bom.entity.MessageProtocol;
import com.thit.tibdm.sparkstream.util.ParseUtil;
import io.netty.buffer.ByteBuf;
import io.netty.buffer.Unpooled;
import org.junit.Test;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.util.Map;


/**
 * Created by wanghaoqiang on 2017/6/9.
 * 测试crc校验码
 */
public class CrcUtilTest {
    public final static Logger LOGGER = LoggerFactory.getLogger(CrcUtilTest.class);

    @Test
    public void crc_16_CCITT_False() throws Exception {
        long cs = System.currentTimeMillis();
        System.out.println("类开始时间：" + cs);
        String heart = "00 01 03 cb 05 00 00 00 00 00 02 00 08 00 0d 00 0e 00 0d 00 0c 00 02 04 70 42 00 fc 18 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 22 22 22 22 22 00 22 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 22 22 02 22 1f 02 02 01 65 65 65 00 00 00 f5 f6 f5 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 aa aa aa 55 01 11 00 30 33 38 35 38 33 0f 3a 10 3b 10 9f 10 9f 10 3b 0f 00 00 00 00 00 00 42 ff ff ff ff 42 17 18 1a 19 1a 18 1e 1b 1c 1c 1c 1e 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 10 01 09 55 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 55 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 06 06 06 06 06 06 06 06 06 06 06 06 01 04 01 0e 01 0e 01 0e 01 04 01 04 00 f1 00 f1 00 f1 00 f1 00 f1 00 10 10 10 10 10 10 01 10 01 0b 01 11 01 11 01 0d 01 15 01 07 01 17 01 1d 01 1b 01 19 01 0c 01 02 00 ff 01 02 01 04 00 fd 01 03 00 fd 01 06 01 0d 01 0a 01 06 00 fe 01 15 01 10 01 14 01 10 01 0e 01 14 01 1b 01 19 01 1a 01 1b 01 15 01 19 01 10 01 1a 01 1e 01 1c 01 17 01 0e 01 10 01 1f 01 25 01 1e 01 1b 01 3f 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 11 11 11 11 11 11 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 4e 4e 4e 4e 50 50 4f 4f 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e 4f 4f 4f 4f 4d 4d 4e 4e 4e 4e 4e 4e 4e 4d 4e 4e 4e 4d 4e 4e 4d 4d 4d 4d 4e 4e 4e 4e 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 e4 51 00 00 00 00 01 e6 d9 96 00 00 00 00 00 00 00 00 02 e3 02 e0 02 e3 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ff 0f 00 00 f0 cc 00 00 00 00 09 00 81 26 0d 10 90 00 10 68 d2 00 21 87 1c 38 e0 00 18 30 60 63 30 4f a0 01 00 30 20 62 c0 50 60 00 0c 30 b0 63 50 4f f1 00 2f c0 61 60 50 19 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 a1 00 00 00 02 01 00 a1 00 00 00 02 01 00 a3 00 00 00 02 01 00 97 00 00 00 02 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 03 00 08 00 f5 65 c7 00 00 00 03 00 08 00 f5 65 c7 00 00 00 00 00 00 64 0c 39 30 00 89 08 3d 33 00 69 08 3e 38 00 69 08 3e 35 00 69 08 3d 38 00 89 08 39 33 00 49 08 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 22 22 22 22 22 22 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 e1 27 df e2 04 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 02 01 9b
        String[] split = heart.split(" ");
        String replace = heart.replace(" ", "");
        System.out.println(replace);
        byte[] bytes = HexUtil.hexString2Bytes(replace);




        long s = System.currentTimeMillis();
        System.out.println("开始时间：" + s);
        for (int i = 0; i < 100; i++) {
            ByteBuf byteBuf = Unpooled.buffer();
            byteBuf.writeBytes(bytes);
            LOGGER.info(i+"");
        }
        long e = System.currentTimeMillis();
        System.out.println("结束时间：" + e);
        System.out.println("消耗的时间为：" + (e-s));


        byte[] crc = new byte[bytes.length - 8];
        System.arraycopy(bytes, 3, crc, 0, bytes.length - 8);
//        for (int i = 0; i < bytes.length; i++) {
//
//            LOGGER.info("单个字节：" + (bytes[i] & 0xFF));
//        }


        LOGGER.info("上面是原始数据==================");
//        for (int i = 0; i < crc.length; i++) {
//
//            LOGGER.info("有效数据的单个字节：" + (crc[i] & 0xFF));
//        }
        LOGGER.info("上面是有效数据==================");
//        Make_CRC(crc)
        LOGGER.info("最后的校验字段：" + CrcUtil.crc_16_CCITT_False(crc, crc.length));
        long es = System.currentTimeMillis();
        System.out.println("类结束时间：" + es);
        System.out.println("类消耗的时间为：" + (es-cs));
    }


    @Test
    public void getTime(){
        String heart = "AA AB AC 01 00 00 00 01 02 10 00 00 05 8E 01 04 01 50 01 11 06 09 10 2A 31 02 5E 00 00 00 00 00 00 00 00 00 01 03 cb 05 00 00 00 00 00 02 06 52 00 0d 00 0e 00 0d 00 0c 00 02" +
                " 02 02 50 00 fc 18 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 11 22 22 22 22 00 22 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00" +
                " 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 22 11 01 11 1f be be be 78 78 77 0f 08 05 ff 00 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00" +
                " 00 00 00 aa aa aa 55 01 11 00 35 35 3a 38 3a 35 0f 3a 10 3b 10 9f 10 9f 10 3b 0f 00 00 00 00 00 00 50 ff ff ff ff 50 19 19 1b 1a 1b 19 1e 1b 1c 1c 1c 1e 00 00 00 00 00 00 00 00 00" +
                " 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 10 01 06 55 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 11 11 11 11 11 11 11 11 11" +
                " 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 55 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 06 06 06 06 06 06 06 06 06" +
                " 06 06 06 01 04 01 04 01 04 00 fa 00 fa 00 f0 00 f0 00 f0 00 f0 00 f0 00 f0 00 10 10 10 10 10 10 01 1c 01 11 01 0d 01 0c 01 02 01 04 01 0e 01 15 01 17 01 16 01 10 00 fe 01 02 00 fa" +
                " 00 f3 00 f6 00 eb 00 ec 00 f8 00 fe 00 fe 00 fd 00 f8 00 ec 01 19 01 0d 01 06 01 0a 01 00 01 06 01 1b 01 10 01 0f 01 11 01 03 01 0a 01 11 01 14 01 12 01 13 01 0e 01 04 01 11 01 1b" +
                " 01 1d 01 14 01 0f 01 3f 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 11 11 11 11 11 11 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00" +
                " 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 50 50 50 50 51 51 50 50 51 53 53 51 51 53 53 52 52 53 53 52 51 53 53 51 51 53 53 52 51 53 53 51 51 52 52 50 51 52 53 51 4f 4f 4f 4f 50" +
                " 51 51 50 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00" +
                " 26 80 00 00 02 83 00 00 7d 01 00 00 48 1a 00 01 e1 d8 00 22 17 67 01 e1 ad 7b 00 00 02 3c 00 00 02 ba 02 db 02 d8 02 db 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00" +
                " 00 00 00 00 00 00 00 00 00 00 00 00 ff 0f 00 00 f0 cc 00 00 00 00 09 00 81 1e 0d 10 90 00 10 e8 d1 00 21 87 1c 38 e0 00 18 30 70 63 40 4f a0 01 00 30 40 62 c0 50 50 00 0c 30 90 63" +
                " 70 4f e1 00 2f d0 61 80 50 72 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 40 00 00 00" +
                " 02 01 00 7f 00 00 00 02 01 00 e9 00 00 00 02 01 00 8b 00 00 00 02 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 51 06 07 0f ff 78 fa 01 00 01 51 06 07 0f ff" +
                " 78 fa 01 00 00 00 00 00 64 0c 39 35 00 db 18 3d 35 00 bb 18 3e 3a 00 fb 18 3e 38 00 bb 18 3d 3a 00 fb 18 39 35 00 5b 18 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00" +
                " 22 22 22 22 22 22 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 aa 53 5c c6 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 02 01 9b 00 00 00 00" +
                " 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00" +
                " 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00" +
                " 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00" +
                " 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00" +
                " 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00" +
                " 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00" +
                " 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 9C 55 BA BB BC";
        String replace = heart.replace(" ", "");
        byte[] bytes = HexUtil.hexString2Bytes(replace);
        long s = System.currentTimeMillis();
        System.out.println("开始时间：" + s);
        ByteBuf byteBuf = Unpooled.buffer();
        byteBuf.writeBytes(bytes);
        long e = System.currentTimeMillis();
        System.out.println("结束时间：" + e);
        System.out.println("消耗的时间为：" + (e-s));

    }


    @Test
    public void testwei(){
        int i = -15 & 0xff;
        LOGGER.info(i+"");
    }

    /**
     * 测试数据的解析能力
     */
    @Test
    public void testParse(){
        String heart = "01 f5 00 00 00 00 00 00 00 00 00 01 03 cb 05 00 00 00 00 00 02 00 08 00 0d 00 0e 00 0d 00 0c 00 02 04 70 42 00 fc 18 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 22 22 22 22 22 00 22 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 22 22 02 22 1f 02 02 01 65 65 65 00 00 00 f5 f6 f5 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 aa aa aa 55 01 11 00 30 33 38 35 38 33 0f 3a 10 3b 10 9f 10 9f 10 3b 0f 00 00 00 00 00 00 42 ff ff ff ff 42 17 18 1a 19 1a 18 1e 1b 1c 1c 1c 1e 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 10 01 09 55 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 55 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 06 06 06 06 06 06 06 06 06 06 06 06 01 04 01 0e 01 0e 01 0e 01 04 01 04 00 f1 00 f1 00 f1 00 f1 00 f1 00 10 10 10 10 10 10 01 10 01 0b 01 11 01 11 01 0d 01 15 01 07 01 17 01 1d 01 1b 01 19 01 0c 01 02 00 ff 01 02 01 04 00 fd 01 03 00 fd 01 06 01 0d 01 0a 01 06 00 fe 01 15 01 10 01 14 01 10 01 0e 01 14 01 1b 01 19 01 1a 01 1b 01 15 01 19 01 10 01 1a 01 1e 01 1c 01 17 01 0e 01 10 01 1f 01 25 01 1e 01 1b 01 3f 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 11 11 11 11 11 11 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 4e 4e 4e 4e 50 50 4f 4f 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e 4f 4f 4f 4f 4d 4d 4e 4e 4e 4e 4e 4e 4e 4d 4e 4e 4e 4d 4e 4e 4d 4d 4d 4d 4e 4e 4e 4e 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 e4 51 00 00 00 00 01 e6 d9 96 00 00 00 00 00 00 00 00 02 e3 02 e0 02 e3 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ff 0f 00 00 f0 cc 00 00 00 00 09 00 81 26 0d 10 90 00 10 68 d2 00 21 87 1c 38 e0 00 18 30 60 63 30 4f a0 01 00 30 20 62 c0 50 60 00 0c 30 b0 63 50 4f f1 00 2f c0 61 60 50 19 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 a1 00 00 00 02 01 00 a1 00 00 00 02 01 00 a3 00 00 00 02 01 00 97 00 00 00 02 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 03 00 08 00 f5 65 c7 00 00 00 03 00 08 00 f5 65 c7 00 00 00 00 00 00 64 0c 39 30 00 89 08 3d 33 00 69 08 3e 38 00 69 08 3e 35 00 69 08 3d 38 00 89 08 39 33 00 49 08 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 22 22 22 22 22 22 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 e1 27 df e2 04 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 02 01 9b
        //有效数据器解析
        String replace = heart.replace(" ", "");
        byte[] bytes = HexUtil.hexString2Bytes(replace);
        Map<String, String> proChMap=
                (Map<String, String>) JSON.parse(ResourceUtil.getProValueByNameAndKey("rdb", "ch-pro"));
        Map<String, MessageProtocol> pro = SinglePro.instance.getInstance();
        long s = System.currentTimeMillis();
        LOGGER.info("开始时间：" + s);
        for (int i = 0; i < 4; i++) {
            ParseUtil.parseMsgMap(bytes, pro,proChMap);
        }
        long e = System.currentTimeMillis();
        LOGGER.info("结束时间：" + e);
        LOGGER.info("时间差为：" + (e-s));
    }


}